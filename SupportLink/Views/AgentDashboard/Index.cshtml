@model SupportLink.Models.AgentDashboardViewModel

@{
	ViewData["Title"] = "Agent Dashboard";
}

<h2>Agent Dashboard</h2>

<div class="row">
	<div class="col-md-3">
		<div class="card text-bg-warning mb-3">
			<div class="card-body">
				<h6 class="card-title">Newly Assigned</h6>
				<p class="display-6">@Model.NewlyAssigned</p>
				<a asp-controller="SupportTickets" asp-action="Index" class="stretched-link"></a>
			</div>
		</div>
	</div>
	<div class="col-md-3">
		<div class="card text-bg-info mb-3">
			<div class="card-body">
				<h6 class="card-title">In Progress</h6>
				<p class="display-6">@Model.InProgress</p>
				<a asp-controller="SupportTickets" asp-action="Index" class="stretched-link"></a>
			</div>
		</div>
	</div>
	<div class="col-md-3">
		<div class="card text-bg-success mb-3">
			<div class="card-body">
				<h6 class="card-title">Solved</h6>
				<p class="display-6">@Model.Solved</p>
				<a asp-controller="SupportTickets" asp-action="Index" class="stretched-link"></a>
			</div>
		</div>
	</div>
	<div class="col-md-3">
		<div class="card text-bg-primary mb-3">
			<div class="card-body">
				<h6 class="card-title">Updates Made</h6>
				<p class="display-6">@Model.UpdatesMade</p>
				<a asp-controller="TicketUpdates" asp-action="Index" class="stretched-link">Update</a>
			</div>
		</div>
	</div>
</div>

<div class="row">
	<div class="col-md-6">
		<canvas id="pieAgent"></canvas>
	</div>
	<div class="col-md-6">
		<div class="card">
			<div class="card-header">Recently Assigned to Me</div>
			<ul class="list-group list-group-flush">
				@foreach (var t in Model.RecentAssignedTickets)
				{
					<li class="list-group-item d-flex justify-content-between align-items-center">
						<span>#@t.SupportId - @t.Description</span>
						<span class="badge bg-secondary">@t.Status?.Name</span>
						<a asp-controller="SupportTickets" asp-action="Details" asp-route-id="@t.SupportId" class="btn btn-sm btn-outline-primary">View</a>
					</li>
				}
			</ul>
		</div>
	</div>
</div>

@section Scripts {
<script>
    const aCounts = [@Model.NewlyAssigned, @Model.InProgress, @Model.Solved];
    const aTotal = Math.max(aCounts.reduce((a,b)=>a+b,0), 1);
    const aPct = aCounts.map(c => Math.round((c / aTotal) * 100));

    window.createPieChart('pieAgent', ['Newly Assigned', 'In Progress', 'Solved'], aPct, ['#ffc107', '#17a2b8', '#28a745'], 'My Workload (Percent)', 380, 280);
</script>
}


