@model IEnumerable<SupportLink.Models.SupportTicket>
@using System.IO

@{
    ViewData["Title"] = "Index";
}

<style>
    .table tr {
        font-size: 12px;
    }
</style>

<h2>Ticket List</h2>

<div class="d-flex justify-content-between align-items-center mb-3">
    <input type="text" id="memberSearch" class="form-control w-50" placeholder="🔍 Search by organization, category, status, or agent..." />
    @if (User.IsInRole("Staff"))
    {
        <a asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus-circle"></i> New Ticket
        </a>
    }
    @if (User.IsInRole("Admin"))
    {
        <form method="get" class="ms-2">
            <select class="form-select form-select-sm" id="agentFilter" asp-items="ViewBag.Agents">
                <option value="">-- Filter by Agent --</option>
            </select>
        </form>
    }
    </div>
<table class="table table-bordered align-middle">
    <thead class="table-primary">
        <tr>
            <th>No.</th>
            <th>Ticket Name</th>
            <th>Organization</th>
            <th>Category</th>
            <th>Status</th>
            <th>Assigned Agent</th>
            <th>Description</th>
            <th>File</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            var counter = 1;
            @foreach (var ticket in Model.OrderByDescending(t => t.CreatedAt))
            {
                <tr>
                    <td>@ticket.SupportId</td>
                    <td>@ticket.TicketName</td>
                    <td>@ticket.Organization?.OrganizationName</td>
                    <td>@ticket.IssueCategory?.Name</td>
                    <td>@ticket.Status?.Name</td>
                    <td>@ticket.AssignedAgent?.Email</td>
                    <td>@ticket.Description</td>
                    <td>
                        @if (!string.IsNullOrEmpty(ticket.UploadFile))
                        {
                            <a href="@ticket.UploadFile" target="_blank">@System.IO.Path.GetFileName(ticket.UploadFile)</a>
                        }
                        else
                        {
                            <span>N/A</span>
                        }
                    </td>
                    <td class="d-flex gap-1">
                        @if (!User.IsInRole("Staff"))
                        {
                            <a asp-action="Edit" asp-route-id="@ticket.SupportId" class="btn btn-sm btn-primary">Edit</a>
                        }                        
                        <a asp-action="Details" asp-route-id="@ticket.SupportId" class="btn btn-sm btn-info">Details</a>
                        @if (!User.IsInRole("Staff"))
                        {
                            <a asp-controller="TicketUpdates" asp-action="Create" asp-route-supportId="@ticket.SupportId" class="btn btn-sm btn-outline-primary">Update</a>
                        }
                        @if (!User.IsInRole("Admin") && !User.IsInRole("HeplDesk"))
                        {
                            <a asp-controller="Feedbacks" asp-action="Create" asp-route-supportId="@ticket.SupportId" class="btn btn-sm btn-warning">Feedback</a>
                        }
                        @if (User.IsInRole("Admin"))
                        {
                            @* <form asp-action="AssignAgent" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@ticket.SupportId" />
                                <select name="agentId" class="form-select form-select-sm d-inline w-auto" asp-items="ViewBag.Agents">
                                    <option value="">Assign…</option>
                                </select>
                                <button type="submit" class="btn btn-sm btn-outline-secondary">Assign</button> 
                            </form> *@
                            <a asp-action="Delete" asp-route-id="@ticket.SupportId" class="btn btn-sm btn-danger">Delete</a>
                        }
                        @if (User.IsInRole("Agent") && (ticket.StatusId == 1 || ticket.StatusId == 2 || ticket.StatusId == 3) && (ticket.AssignedId == null || ticket.AssignedId == (int?)Convert.ToInt32(User.FindFirst("UserId")?.Value)))
                        {
                            <form asp-action="AssignToMe" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@ticket.SupportId" />
                                <button type="submit" class="btn btn-sm btn-outline-success">Assign me</button>
                            </form>
                        }
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7" class="text-center text-muted">No tickets found.</td>
            </tr>
        }
    </tbody>
</table>

<script>
    document.getElementById('memberSearch').addEventListener('input', function () {
        const searchTerm = this.value.toLowerCase();
        const rows = document.querySelectorAll('.table tbody tr');

        rows.forEach(row => {
            const rowText = row.innerText.toLowerCase();
            row.style.display = rowText.includes(searchTerm) ? '' : 'none';
        });
    });
</script>
